const { Client, Message, MessageEmbed, MessageButton, MessageActionRow, MessageAttachment } = require("discord.js");
const Canvas = require('canvas')
Canvas.registerFont(`../../Assets/fonts/theboldfont.ttf`, { family: "Bold" });
Canvas.registerFont(`../../Assets/fonts/SketchMatch.ttf`, { family: "SketchMatch" });
Canvas.registerFont(`../../Assets/fonts/LuckiestGuy-Regular.ttf`, { family: "luckiest guy" });
Canvas.registerFont(`../../Assets/fonts/KeepCalm-Medium.ttf`, { family: "KeepCalm" });
const Users = require('../../../../Global/Databases/Schemas/Client.Users');
const { genEmbed } = require("../../../../Global/Init/Embed");

module.exports = {
    Isim: "coin",
    Komut: ["coinim","c"],
    Kullanim: "coin @acar/ID",
    Aciklama: "Bir Ã¼yenin coin bilgisini gÃ¶rÃ¼ntÃ¼ler.",
    Kategori: "eco",
    Extend: true,
    
   /**
   * @param {Client} client 
   */
    onLoad: function (client) {
        client.on("ready", async () => {
	    setInterval(async () => {
                ilkYazan(2500)
		setTimeout(() => {
            matematikOyunu(5000)
			setTimeout(() => {
				doÄŸruKasaBul(5000)
				setTimeout(() => {
					tahminEt(5000)
				}, 1000*60*3)
			}, 1000*60*5)
		}, 1000*60*2)
            }, 1000*60*18)
            matematikOyunu(5000)
        } )



    },

   /**
   * @param {Client} client 
   * @param {Message} message 
   * @param {Array<String>} args 
   */

    onRequest: async function (client, message, args) {
        if(ayarlar.staff.includes(message.member.id) && args[0] == "forcedelete") {
            let uye = args[1]
            if(!uye) return;
            await Users.deleteOne({_id: uye})
            return message.react(message.guild.emojiGÃ¶ster(emojiler.Onay) ? message.guild.emojiGÃ¶ster(emojiler.Onay).id : undefined)
        }
        let embed = new genEmbed()
        let kullanici = message.mentions.users.first() || client.guilds.cache.get(sistem.SERVER.ID).members.cache.get(args[0]) || message.member;
        if(!kullanici) return message.reply(cevaplar.Ã¼ye).then(s => setTimeout(() => s.delete().catch(err => {}), 5000));
        let uye = client.guilds.cache.get(sistem.SERVER.ID).members.cache.get(kullanici.id)
        let para = await client.Economy.viewBalance(uye.id, 1)
        let altÄ±n = await client.Economy.viewBalance(uye.id, 0)
        // Canvas
let canvas = Canvas.createCanvas(1080, 400),
        
        ctx = canvas.getContext("2d");
    ctx.beginPath();
    ctx.moveTo(0 + Number(30), 0);
    ctx.lineTo(0 + 1080 - Number(30), 0);
    ctx.quadraticCurveTo(0 + 1080, 0, 0 + 1080, 0 + Number(30));
    ctx.lineTo(0 + 1080, 0 + 400 - Number(30));
    ctx.quadraticCurveTo(
    0 + 1080,
    0 + 400,
    0 + 1080 - Number(30),
    0 + 400
    );
    ctx.lineTo(0 + Number(30), 0 + 400);
    ctx.quadraticCurveTo(0, 0 + 400, 0, 0 + 400 - Number(30));
    ctx.lineTo(0, 0 + Number(30));
    ctx.quadraticCurveTo(0, 0, 0 + Number(30), 0);
    ctx.closePath();
    ctx.clip();
    ctx.fillStyle = "#ffffff";
    ctx.fillRect(0, 0, 1080, 400);
    let background = await Canvas.loadImage(client.guilds.cache.get(sistem.SERVER.ID).banner ? client.guilds.cache.get(sistem.SERVER.ID).banner ? client.guilds.cache.get(sistem.SERVER.ID).bannerURL({dynamic: true, format: "png"}) + `?size=4096` : "https://cdn.discordapp.com/attachments/946751524028162118/947678638315298866/open-the-door-android-iphone-desktop-hd-backgrounds-wallpapers-1080p-4khd-wallpapers-desktop-background-android-iphone-1080p-4k-pqrfj.png" : "https://cdn.discordapp.com/attachments/946751524028162118/947678638315298866/open-the-door-android-iphone-desktop-hd-backgrounds-wallpapers-1080p-4khd-wallpapers-desktop-background-android-iphone-1080p-4k-pqrfj.png");
    ctx.drawImage(background, 0, 0, 1080, 400);
    ctx.restore();
    ctx.beginPath();
    ctx.globalAlpha = 0.5
    ctx.fillStyle = "#000000";
    
    ctx.moveTo(50,  22);
    ctx.lineTo(canvas.width - 50,  22);
    ctx.quadraticCurveTo(canvas.width - 50,  22, canvas.width -  22, 50);
    ctx.lineTo(canvas.width -  22, canvas.height - 50);
    ctx.quadraticCurveTo(canvas.width - 25, canvas.height -  22, canvas.width - 50, canvas.height -  22);
    ctx.lineTo(50, canvas.height - 22);
    ctx.quadraticCurveTo(25, canvas.height -  22,  22, canvas.height - 50);
    ctx.lineTo( 22, 50);
    ctx.quadraticCurveTo( 22,  22, 50,  22);
    ctx.fill();
    ctx.globalAlpha = 1
    ctx.closePath();
    ctx.stroke();
        let gold = await Canvas.loadImage("https://cdn.discordapp.com/emojis/998212095306903653.png?size=96&quality=lossless")
        let coin = await Canvas.loadImage("https://cdn.discordapp.com/emojis/998211961462464532.png?size=96&quality=lossless")
        ctx.drawImage(gold, canvas.width - 750, 260, 85, 75);
        ctx.drawImage(coin, canvas.width - 740, 200, 75, 65);
      // Draw title
      ctx.font = "30px Bold";
      ctx.strokeStyle = "#e7d02e";
      ctx.lineWidth = 3;
      ctx.strokeText(`${altÄ±n} ALTIN`, canvas.width - 650, 315);
      ctx.fillStyle = "#ffffff";
      ctx.fillText(`${altÄ±n} ALTIN`, canvas.width - 650, 315);
        

      ctx.fillStyle = "#000000"; 
      ctx.lineWidth = 3;
      ctx.fillStyle = "#e7d02e";
      ctx.font = applyText(canvas, uye.user.tag + " UYESININ HESABI", 40, 600, "Bold");
      ctx.fillText(uye.user.tag + " UYESININ HESABI", canvas.width - 740, canvas.height - 230);




    // Draw title
    ctx.font = "30px Bold";
    ctx.strokeStyle = "#e7d02e";
    ctx.lineWidth = 3;
    ctx.strokeText(para.toFixed(0).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,") + " "+ ayarlar.serverName + " PARASI", canvas.width - 650, 240);
    ctx.fillStyle = "#ffffff";
     ctx.fillText(para.toFixed(0).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,") + " "+ ayarlar.serverName + " PARASI", canvas.width - 650, 240);

    // Draw title
    ctx.font = "70px Bold";
    ctx.strokeStyle = "#000000";
    ctx.lineWidth = 8;
    ctx.strokeText(ayarlar.serverName, canvas.width - 650, canvas.height - 300);
    ctx.fillStyle = "#e7d02e";
    ctx.fillText(ayarlar.serverName, canvas.width - 650, canvas.height - 300);

    ctx.beginPath();
    ctx.lineWidth = 10;
    ctx.strokeStyle = "#e7d02e";
    ctx.arc(193, 200, 130, 0, Math.PI * 2, true);
    ctx.stroke();
    ctx.closePath();
    ctx.clip();
    const avatar = await Canvas.loadImage(uye.user.avatar ? uye.user.avatarURL({dynamic: true , format: "png"}) : "https://cdn.discordapp.com/attachments/915702481776963615/928900758135509022/dd83hdp-ef7fc5cd-ac92-4ad1-adfc-8e2e933ce256.png");
    ctx.drawImage(avatar, 58, 70, 270, 270);
          
        let ekonomiPanel = new MessageActionRow().addComponents(
            new MessageButton()
            .setLabel("MaÄŸaza")
            .setCustomId("magaza")
            .setStyle("SECONDARY")
            .setEmoji("948674883200630874"),
            new MessageButton()
            .setLabel("SatÄ±n AldÄ±klarÄ±m")
            .setCustomId("harcamalar")
            .setStyle("SECONDARY")
            .setEmoji("948677620290166886"),
            new MessageButton()
            .setLabel("Doviz Ä°ÅŸlemleri")
            .setCustomId("dovizislem")
            .setStyle("SECONDARY")
            .setEmoji("948674910425853993"),
            new MessageButton()
            .setLabel("Transferlerim")
            .setCustomId("iÅŸlemler")
            .setStyle("SECONDARY")
            .setEmoji("927314290732576809"),
            new MessageButton()
            .setLabel("GÃ¼nlÃ¼k Al")
            .setCustomId("gÃ¼nlÃ¼k")
            .setStyle("SUCCESS")
            .setEmoji("947548346145447996"),

        )
        let Hesap = await Users.findById({_id: uye.id}) 
        if(Hesap && Hesap.Daily) {
            let yeniGÃ¼n = Hesap.Daily + (1*24*60*60*1000);
            if (Date.now() < yeniGÃ¼n) {
                ekonomiPanel.components[4].setLabel(`${kalanzaman(yeniGÃ¼n)}`)
                ekonomiPanel.components[4].setStyle("SECONDARY")
                ekonomiPanel.components[4].setDisabled(true)
            }
        }
        const attachment = new MessageAttachment(canvas.toBuffer(), 'acar_economy.png');

        message.reply({content: `ðŸ’³ | ${uye.id == message.member.id ? `${kullanici}` : `${kullanici} Ã¼yesinin`} **${ayarlar.serverName} ParasÄ±** ve **AltÄ±n** ${uye.id == message.member.id ? "hesabÄ±n" : "hesabÄ±"} aÅŸaÄŸÄ±da gÃ¶rÃ¼ntÃ¼lenmektedir.`, files: [attachment], components: message.member.id == uye.id ? [ekonomiPanel] : null}).then(async (x) => {
            var filter = (i) => i.user.id == message.member.id
            let collector = await x.createMessageComponentCollector({filter: filter, max: 1, time: 60000})
            collector.on('collect', async (i) => {
                collector.stop()
                if(i.customId == "magaza") {
                    let kom = client.commands.find(x => x.Isim == "maÄŸaza")
                    if(kom) kom.onRequest(client, message, args)
                    x.delete().catch(err => {})
                    i.deferUpdate().catch(err => {})
                }
                if(i.customId == "harcamalar") {
                    let kom = client.commands.find(x => x.Isim == "envanter")
                    if(kom) kom.onRequest(client, message, args)
                    x.delete().catch(err => {})
                    i.deferUpdate().catch(err => {})
                }
                if(i.customId == "iÅŸlemler") {
                    let kom = client.commands.find(x => x.Isim == "transferler")
                    if(kom) kom.onRequest(client, message, args)
                    x.delete().catch(err => {})
                    i.deferUpdate().catch(err => {})
                }
                if(i.customId == "dovizislem") {
                    let kom = client.commands.find(x => x.Isim == "bozdur")
                    if(kom) kom.onRequest(client, message, args)
                    x.delete().catch(err => {})
                    i.deferUpdate().catch(err => {})
                }
                if(i.customId == "gÃ¼nlÃ¼k") {
                    let kom = client.commands.find(x => x.Isim == "gÃ¼nlÃ¼k")
                    if(kom) kom.onRequest(client, message, args)
                    x.delete().catch(err => {})
                    i.deferUpdate().catch(err => {})
                }
            })
            collector.on('end', async (i) => x.delete().catch(err => {}))
        })
    }
};

async function ilkYazan(odÃ¼l = Number(Math.floor(Math.random() * 10000) + 200)) {
    let kanal = client.channels.cache.get(global.kanallar.chatKanalÄ±)
    if(!kanal) return;
    let kod = kodOluÅŸtur(10)
    let canvas = Canvas.createCanvas(1080, 400),

    ctx = canvas.getContext("2d");

    // Canvas
ctx.beginPath();
ctx.moveTo(0 + Number(30), 0);
ctx.lineTo(0 + 1080 - Number(30), 0);
ctx.quadraticCurveTo(0 + 1080, 0, 0 + 1080, 0 + Number(30));
ctx.lineTo(0 + 1080, 0 + 400 - Number(30));
ctx.quadraticCurveTo(
0 + 1080,
0 + 400,
0 + 1080 - Number(30),
0 + 400
);
ctx.lineTo(0 + Number(30), 0 + 400);
ctx.quadraticCurveTo(0, 0 + 400, 0, 0 + 400 - Number(30));
ctx.lineTo(0, 0 + Number(30));
ctx.quadraticCurveTo(0, 0, 0 + Number(30), 0);
ctx.closePath();
ctx.clip();
ctx.fillStyle = "#ffffff";
ctx.fillRect(0, 0, 1080, 400);
let background = await Canvas.loadImage(client.guilds.cache.get(sistem.SERVER.ID).banner ? client.guilds.cache.get(sistem.SERVER.ID).bannerURL({dynamic: true, format: "png"}) + `?size=4096` : "https://cdn.discordapp.com/attachments/946751524028162118/947678638315298866/open-the-door-android-iphone-desktop-hd-backgrounds-wallpapers-1080p-4khd-wallpapers-desktop-background-android-iphone-1080p-4k-pqrfj.png");
ctx.drawImage(background, 0, 0, 1080, 400);
ctx.restore();
ctx.closePath();

ctx.beginPath();
ctx.globalAlpha = 0.5
ctx.fillStyle = "#000000";

ctx.moveTo(50,  22);
ctx.lineTo(canvas.width - 50,  22);
ctx.quadraticCurveTo(canvas.width - 50,  22, canvas.width -  22, 50);
ctx.lineTo(canvas.width -  22, canvas.height - 50);
ctx.quadraticCurveTo(canvas.width - 25, canvas.height -  22, canvas.width - 50, canvas.height -  22);
ctx.lineTo(50, canvas.height - 22);
ctx.quadraticCurveTo(25, canvas.height -  22,  22, canvas.height - 50);
ctx.lineTo( 22, 50);
ctx.quadraticCurveTo( 22,  22, 50,  22);
ctx.fill();
ctx.closePath();
//ctx.fillRect(50, 30, 980, 350);

ctx.globalAlpha = 1
ctx.stroke();
ctx.textAlign = "left";
ctx.fillStyle = "#ffffff";
ctx.font = applyText(canvas, "TAHMÄ°N ET!", 75, 500, "Bold");
// border text
ctx.strokeStyle = "#ffffff";
ctx.fillText("ILK YAZAN SEN OL!", 210, 125);


ctx.textAlign = "left";
ctx.fillStyle = "#ffffff";
ctx.font = applyText(canvas, `${odÃ¼l} ${global.ayarlar.serverName.toUpperCase()} PARASI KAZANACAKSIN!`, 45, 690, "Bold");
ctx.fillText(`SEN YAZARSAN ${odÃ¼l} ${global.ayarlar.serverName.toUpperCase()} PARASI KAZANACAKSIN!`,70, 130 + 85 );


ctx.textAlign = "center";
let renk = ["#2cc09a","#fff3f3","#868dfe","#b10053","#c7c7ea"]
ctx.fillStyle = renk[Math.floor(Math.random()*renk.length)]
ctx.strokeRect(0, 0, canvas.width, canvas.height)
ctx.font = applyText(canvas, kod, 100, 400, "luckiest guy");
ctx.fillText(kod, 525, 350 );

    const attachment = new MessageAttachment(canvas.toBuffer(), 'acar_economy.png');
    let msg = await kanal.send({content: "**HÄ±zlÄ± Ol ve Kazan**\nAÅŸaÄŸÄ±da rastgele verilmiÅŸ bir kodu doÄŸru yaz ve kazan! Bunun iÃ§in 20 Saniyeniz var!", files: [attachment] ,components: []})

    const filter = m => m.content.includes(kod);
     const collector = kanal.createMessageCollector({ filter, max: 1, time: 20000 });
    
    collector.on('collect',async (m) => {
        m.react(m.guild.emojiGÃ¶ster(emojiler.Onay))
        let uye = m.guild.members.cache.get(m.member.id)
        kanal.send({content: `**Tebrikler!** HÄ±zlÄ± Ol Ve Kazan etkinliÄŸini ${uye} kazandÄ±! ${m.guild.emojiGÃ¶ster("a_rich")}` , files: [], files: []}).then(x => setTimeout(() => {
            x.delete()
        }, 10000))
msg.delete().catch(err =>{})
        if(uye) return await client.Economy.updateBalance(uye.id, Number(odÃ¼l), "add", 1)
    });
    
    collector.on('end', collected => {
       msg.delete().catch(err => {})
    });

    function applyText(canvas, text, defaultFontSize, width, font){
        const ctx = canvas.getContext("2d");
        do {
            ctx.font = `${(defaultFontSize -= 1)}px ${font}`;
        } while (ctx.measureText(text).width > width);
        return ctx.font;
    }
    function kodOluÅŸtur(length) {
        var randomChars = '123456789';
        var result = '';
        for ( var i = 0; i < length; i++ ) {
            result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));
        }
        return result;
    }
}


async function tahminEt(odÃ¼l = Number(Math.floor(Math.random() * 4000) + 1000)) {
    let kanal = client.channels.cache.get(global.kanallar.chatKanalÄ±)
    if(!kanal) return;
    let cevap = Math.floor(Math.random() * 5) + 1
    let basanlar = []
    let canvas = Canvas.createCanvas(1080, 400),

    ctx = canvas.getContext("2d");

    // Canvas
ctx.beginPath();
ctx.moveTo(0 + Number(30), 0);
ctx.lineTo(0 + 1080 - Number(30), 0);
ctx.quadraticCurveTo(0 + 1080, 0, 0 + 1080, 0 + Number(30));
ctx.lineTo(0 + 1080, 0 + 400 - Number(30));
ctx.quadraticCurveTo(
0 + 1080,
0 + 400,
0 + 1080 - Number(30),
0 + 400
);
ctx.lineTo(0 + Number(30), 0 + 400);
ctx.quadraticCurveTo(0, 0 + 400, 0, 0 + 400 - Number(30));
ctx.lineTo(0, 0 + Number(30));
ctx.quadraticCurveTo(0, 0, 0 + Number(30), 0);
ctx.closePath();
ctx.clip();
ctx.fillStyle = "#ffffff";
ctx.fillRect(0, 0, 1080, 400);
let background = await Canvas.loadImage(client.guilds.cache.get(sistem.SERVER.ID).banner ? client.guilds.cache.get(sistem.SERVER.ID).bannerURL({dynamic: true, format: "png"}) + `?size=4096` : "https://cdn.discordapp.com/attachments/946751524028162118/947678638315298866/open-the-door-android-iphone-desktop-hd-backgrounds-wallpapers-1080p-4khd-wallpapers-desktop-background-android-iphone-1080p-4k-pqrfj.png");
ctx.drawImage(background, 0, 0, 1080, 400);
ctx.restore();

ctx.beginPath();
ctx.globalAlpha = 0.5
ctx.fillStyle = "#000000";

ctx.moveTo(50,  22);
ctx.lineTo(canvas.width - 50,  22);
ctx.quadraticCurveTo(canvas.width - 50,  22, canvas.width -  22, 50);
ctx.lineTo(canvas.width -  22, canvas.height - 50);
ctx.quadraticCurveTo(canvas.width - 25, canvas.height -  22, canvas.width - 50, canvas.height -  22);
ctx.lineTo(50, canvas.height - 22);
ctx.quadraticCurveTo(25, canvas.height -  22,  22, canvas.height - 50);
ctx.lineTo( 22, 50);
ctx.quadraticCurveTo( 22,  22, 50,  22);
ctx.fill();
ctx.closePath();
//ctx.fillRect(50, 30, 980, 350);
ctx.globalAlpha = 1
ctx.stroke();
ctx.textAlign = "left";
ctx.fillStyle = "#ffffff";
ctx.font = applyText(canvas, "TAHMÄ°N ET!", 75, 500, "Bold");
ctx.fillText("TAHMIN ET VE KAZAN!", 85 + 100, 125);
ctx.textAlign = "left";
ctx.fillStyle = "#ffffff";
ctx.font = applyText(canvas, `${odÃ¼l} ${global.ayarlar.serverName.toUpperCase()} PARASI KAZANACAKSIN!`, 45, 690, "Bold");
ctx.fillText(`DOGRU CEVAPLARSAN`,350, 130 + 85 );

ctx.textAlign = "left";
ctx.fillStyle = "#ffffff";
ctx.font = applyText(canvas, `${odÃ¼l} ${global.ayarlar.serverName.toUpperCase()} PARASI KAZANACAKSIN!`, 45, 690, "Bold");
ctx.fillText(`${odÃ¼l} ${global.ayarlar.serverName.toUpperCase()} PARASI KAZANACAKSIN!`,210, 180 + 85 );

ctx.font = applyText(canvas, "SADECE BIR KEZ HAKKIN VAR!", 200, 710, "Bold");
ctx.fillText("SADECE BIR KEZ HAKKIN VAR!", 190, 310 + 40 );

    const attachment = new MessageAttachment(canvas.toBuffer(), 'acar_economy.png');

    let rakamSatirBir = new MessageActionRow().addComponents(
        new MessageButton().setCustomId('1').setLabel('1').setStyle('SECONDARY'),
        new MessageButton().setCustomId('2').setLabel('2').setStyle('SECONDARY'),
        new MessageButton().setCustomId('3').setLabel('3').setStyle('SECONDARY'),
        new MessageButton().setCustomId('4').setLabel('4').setStyle('SECONDARY'),
        new MessageButton().setCustomId('5').setLabel('5').setStyle('SECONDARY')
    )
    let msg = await kanal.send({content: "**HÄ±zlÄ± Ol ve Kazan**\nAÅŸaÄŸÄ±da 1 ile 5 arasÄ± verilen rakamlardan doÄŸru rakamÄ± tahmin edin. Bunun iÃ§in 30 Saniyeniz var!", files: [attachment] ,components: [rakamSatirBir]})

    const filter = i => i

    const collector = msg.createMessageComponentCollector({ componentType: 'BUTTON', time: 30000 });

    collector.on('collect', async i => {
        if (i.customId === String(cevap)) {
            if(basanlar.includes(i.user.id)) return await i.reply({content: `${i.guild.emojiGÃ¶ster(emojiler.Iptal)} Cevap hakkÄ±nÄ±zÄ± doldurmuÅŸsunuz. ÃœzgÃ¼nÃ¼m!`, ephemeral: true});
            await i.reply({ content: `> **Tebrikler!** EtkinliÄŸi kazandÄ±ÄŸÄ±nÄ±z iÃ§in hesabÄ±nÄ±za +**${odÃ¼l}** ${global.ayarlar.serverName} ParasÄ± aktarÄ±ldÄ±.`, ephemeral: true})
            let uye = i.guild.members.cache.get(i.user.id)
	                       kanal.send({content: `**Tebrikler!** HÄ±zlÄ± Ol Ve Kazan etkinliÄŸini ${uye} kazandÄ±! ${i.guild.emojiGÃ¶ster("a_rich")}` , files: []}).then(x => setTimeout(() => {
                            x.delete()
                        }, 10000))
msg.delete().catch(err =>{})
            basanlar = []
            if(uye) return await client.Economy.updateBalance(uye.id, Number(odÃ¼l), "add", 1)
            
        }
        if(i.customId != String(cevap)) {
            if(basanlar.includes(i.user.id)) return await i.reply({content: `${i.guild.emojiGÃ¶ster(emojiler.Iptal)} Cevap hakkÄ±nÄ±zÄ± doldurmuÅŸsunuz. ÃœzgÃ¼nÃ¼m!`, ephemeral: true});
            basanlar.push(i.user.id)
            await i.reply({ content: `${i.guild.emojiGÃ¶ster(emojiler.Iptal)} **Hay Aksi!** YanlÄ±ÅŸ, artÄ±k birdahaki sorulara. Cevap hakkÄ±nÄ±z doldu!`, ephemeral: true})
        }
    });

    collector.on('end', collected => msg.delete().catch(err => {}));

    function applyText(canvas, text, defaultFontSize, width, font){
        const ctx = canvas.getContext("2d");
        do {
            ctx.font = `${(defaultFontSize -= 1)}px ${font}`;
        } while (ctx.measureText(text).width > width);
        return ctx.font;
    }
}

async function matematikOyunu(odÃ¼l = Number(Math.floor(Math.random() * 2000) + 500)) {
    let kanal = client.channels.cache.get(global.kanallar.chatKanalÄ±)
    if(!kanal) return;
    var a = Math.floor(Math.random() * 400) + 200
    var b = Math.floor(Math.random() * 250)
    let cevap = '';
    let soru = '';
    let randd = ["toplama", "Ã§Ä±kartma", "Ã§arpma", "bÃ¶lme"]
    let sonuclandÄ±r = randd[Math.floor(Math.random() * 3)]
    if(sonuclandÄ±r == "toplama") cevap = a + b, soru = `${a} + ${b}`
    if(sonuclandÄ±r == "Ã§Ä±kartma") cevap = a - b, soru = `${a} - ${b}`
    if(sonuclandÄ±r == "Ã§arpma") cevap = a * b, soru = `${a} * ${b}`
    if(sonuclandÄ±r == "bÃ¶lme") cevap = a / b, soru = `${a} / ${b}`

    let basanlar = []
    let canvas = Canvas.createCanvas(1080, 400),

    ctx = canvas.getContext("2d");

    // Canvas
ctx.beginPath();
ctx.moveTo(0 + Number(30), 0);
ctx.lineTo(0 + 1080 - Number(30), 0);
ctx.quadraticCurveTo(0 + 1080, 0, 0 + 1080, 0 + Number(30));
ctx.lineTo(0 + 1080, 0 + 400 - Number(30));
ctx.quadraticCurveTo(
0 + 1080,
0 + 400,
0 + 1080 - Number(30),
0 + 400
);
ctx.lineTo(0 + Number(30), 0 + 400);
ctx.quadraticCurveTo(0, 0 + 400, 0, 0 + 400 - Number(30));
ctx.lineTo(0, 0 + Number(30));
ctx.quadraticCurveTo(0, 0, 0 + Number(30), 0);
ctx.closePath();
ctx.clip();
ctx.fillStyle = "#ffffff";
ctx.fillRect(0, 0, 1080, 400);
let background = await Canvas.loadImage(client.guilds.cache.get(sistem.SERVER.ID).banner ? client.guilds.cache.get(sistem.SERVER.ID).bannerURL({dynamic: true, format: "png"}) + `?size=4096` : "https://cdn.discordapp.com/attachments/946751524028162118/947678638315298866/open-the-door-android-iphone-desktop-hd-backgrounds-wallpapers-1080p-4khd-wallpapers-desktop-background-android-iphone-1080p-4k-pqrfj.png");
ctx.drawImage(background, 0, 0, 1080, 400);
ctx.restore();
ctx.beginPath();
ctx.globalAlpha = 0.5
ctx.fillStyle = "#000000";
ctx.moveTo(50,  22);
ctx.lineTo(canvas.width - 50,  22);
ctx.quadraticCurveTo(canvas.width - 50,  22, canvas.width -  22, 50);
ctx.lineTo(canvas.width -  22, canvas.height - 50);
ctx.quadraticCurveTo(canvas.width - 25, canvas.height -  22, canvas.width - 50, canvas.height -  22);
ctx.lineTo(50, canvas.height - 22);
ctx.quadraticCurveTo(25, canvas.height -  22,  22, canvas.height - 50);
ctx.lineTo( 22, 50);
ctx.quadraticCurveTo( 22,  22, 50,  22);
ctx.fill();
ctx.closePath();
//ctx.fillRect(50, 30, 980, 350);
ctx.globalAlpha = 1
ctx.stroke();
ctx.textAlign = "left";
ctx.fillStyle = "#ffffff";
ctx.font = applyText(canvas, "TAHMÄ°N ET!", 75, 500, "Bold");
ctx.fillText("BOTMATIK!", 375, 125);

ctx.textAlign = "center";
ctx.fillStyle = "#fff3f3";
ctx.font = applyText(canvas, `${odÃ¼l} ${global.ayarlar.serverName.toUpperCase()} PARASI KAZANACAKSIN!`, 100, 890, "luckiest guy");
ctx.fillText(`${soru}`,550, 120 + 85);

ctx.textAlign = "left";
ctx.fillStyle = "#ffffff";
ctx.font = applyText(canvas, `${odÃ¼l} ${global.ayarlar.serverName.toUpperCase()} PARASI KAZANACAKSIN!`, 45, 690, "Bold");
ctx.fillText(`DOGRU CEVAPLARSAN`,360, 180 + 85 );

ctx.textAlign = "left";
ctx.fillStyle = "#ffffff";
ctx.font = applyText(canvas, `${odÃ¼l} ${global.ayarlar.serverName.toUpperCase()} PARASI KAZANACAKSIN!`, 45, 690, "Bold");
ctx.fillText(`${odÃ¼l} ${global.ayarlar.serverName.toUpperCase()} PARASI KAZANACAKSIN!`,210, 260 + 40 );

ctx.font = applyText(canvas, "SADECE BIR KEZ HAKKIN VAR!", 45, 690, "Bold");
ctx.fillText("SADECE BIR KEZ HAKKIN VAR!", 260, 310 + 40 );

    const attachment = new MessageAttachment(canvas.toBuffer(), 'acar_economy.png');
    let buttons = [
        new MessageButton().setCustomId('qwe').setLabel(`${Math.floor(Math.random() * 550)}`).setStyle('SUCCESS'),
        new MessageButton().setCustomId('qwe1').setLabel(`${Math.floor(Math.random() * 942) + 1}`).setStyle('SUCCESS'),
        new MessageButton().setCustomId('qwe2').setLabel(`${Math.floor(Math.random() * 250)}`).setStyle('SUCCESS'),
        new MessageButton().setCustomId(`${cevap}`).setLabel(`${cevap}`).setStyle('SUCCESS'),
        new MessageButton().setCustomId('qwe6').setLabel(`${Math.floor(Math.random() * 2000)}`).setStyle('SUCCESS')
    ]
    let buttonlarÄ± = buttons.shuffle()
    let rakamSatirBir = new MessageActionRow().addComponents(buttonlarÄ±)
    let msg = await kanal.send({content: "**CevabÄ± Bul!**\nAÅŸaÄŸÄ±da sorunun cevabÄ±nÄ± doÄŸru cevaplayÄ±n. Bunun iÃ§in 30 Saniyeniz var!", files: [attachment] ,components: [rakamSatirBir]})

    const filter = i => i

    const collector = msg.createMessageComponentCollector({ componentType: 'BUTTON', time: 30000 });

    collector.on('collect', async i => {
        if (i.customId === String(cevap)) {
            if(basanlar.includes(i.user.id)) return  await i.reply({content: `${i.guild.emojiGÃ¶ster(emojiler.Iptal)} Cevap hakkÄ±nÄ±zÄ± doldurmuÅŸsunuz. ÃœzgÃ¼nÃ¼m!`, ephemeral: true});
            await i.reply({ content: `> **Tebrikler!** EtkinliÄŸi kazandÄ±ÄŸÄ±nÄ±z iÃ§in hesabÄ±nÄ±za +**${odÃ¼l}** ${global.ayarlar.serverName} ParasÄ± aktarÄ±ldÄ±.`, ephemeral: true})
            let uye = i.guild.members.cache.get(i.user.id)
            basanlar = []
                    kanal.send({content: `**Tebrikler!** CevabÄ± bul etkinliÄŸini ${uye} kazandÄ±! ${i.guild.emojiGÃ¶ster("a_rich")}` , files: []}).then(x => setTimeout(() => {
                        x.delete()
                    }, 10000))
msg.delete().catch(err =>{})
            if(uye) return await client.Economy.updateBalance(uye.id, Number(odÃ¼l), "add", 1)
            
        }
        if(i.customId != String(cevap)) {
            if(basanlar.includes(i.user.id)) return  await i.reply({content: `${i.guild.emojiGÃ¶ster(emojiler.Iptal)} Cevap hakkÄ±nÄ±zÄ± doldurmuÅŸsunuz. ÃœzgÃ¼nÃ¼m!`, ephemeral: true});
            basanlar.push(i.user.id)
            await i.reply({ content: `${i.guild.emojiGÃ¶ster(emojiler.Iptal)} **Hay Aksi!** YanlÄ±ÅŸ, artÄ±k birdahaki sorulara. Cevap hakkÄ±nÄ±z doldu!`, ephemeral: true})
        }
    });

    collector.on('end', collected => msg.delete().catch(err => {}));

    function applyText(canvas, text, defaultFontSize, width, font){
        const ctx = canvas.getContext("2d");
        do {
            ctx.font = `${(defaultFontSize -= 1)}px ${font}`;
        } while (ctx.measureText(text).width > width);
        return ctx.font;
    }
}

async function doÄŸruKasaBul(odÃ¼l = Number(Math.floor(Math.random() * 100000) + 3000)) {
    let kanal = client.channels.cache.get(global.kanallar.chatKanalÄ±)
    if(!kanal) return;
    let cevap = Math.floor(Math.random() * 5) + 1
    let basanlar = []
    let canvas = Canvas.createCanvas(1080, 400),

    ctx = canvas.getContext("2d");

    // Canvas
ctx.beginPath();
ctx.moveTo(0 + Number(30), 0);
ctx.lineTo(0 + 1080 - Number(30), 0);
ctx.quadraticCurveTo(0 + 1080, 0, 0 + 1080, 0 + Number(30));
ctx.lineTo(0 + 1080, 0 + 400 - Number(30));
ctx.quadraticCurveTo(
0 + 1080,
0 + 400,
0 + 1080 - Number(30),
0 + 400
);
ctx.lineTo(0 + Number(30), 0 + 400);
ctx.quadraticCurveTo(0, 0 + 400, 0, 0 + 400 - Number(30));
ctx.lineTo(0, 0 + Number(30));
ctx.quadraticCurveTo(0, 0, 0 + Number(30), 0);
ctx.closePath();
ctx.clip();
ctx.fillStyle = "#ffffff";
ctx.fillRect(0, 0, 1080, 400);
let background = await Canvas.loadImage(client.guilds.cache.get(sistem.SERVER.ID).banner ? client.guilds.cache.get(sistem.SERVER.ID).bannerURL({dynamic: true, format: "png"}) + `?size=4096` : "https://cdn.discordapp.com/attachments/946751524028162118/947678638315298866/open-the-door-android-iphone-desktop-hd-backgrounds-wallpapers-1080p-4khd-wallpapers-desktop-background-android-iphone-1080p-4k-pqrfj.png");
ctx.drawImage(background, 0, 0, 1080, 400);
ctx.restore();
ctx.beginPath();
ctx.globalAlpha = 0.5
ctx.fillStyle = "#000000";
ctx.moveTo(50,  22);
ctx.lineTo(canvas.width - 50,  22);
ctx.quadraticCurveTo(canvas.width - 50,  22, canvas.width -  22, 50);
ctx.lineTo(canvas.width -  22, canvas.height - 50);
ctx.quadraticCurveTo(canvas.width - 25, canvas.height -  22, canvas.width - 50, canvas.height -  22);
ctx.lineTo(50, canvas.height - 22);
ctx.quadraticCurveTo(25, canvas.height -  22,  22, canvas.height - 50);
ctx.lineTo( 22, 50);
ctx.quadraticCurveTo( 22,  22, 50,  22);
ctx.fill();
ctx.closePath();
ctx.globalAlpha = 1
//ctx.fillRect(50, 30, 980, 350);
ctx.stroke();
ctx.textAlign = "left";
ctx.fillStyle = "#ffffff";
ctx.font = applyText(canvas, "TAHMÄ°N ET!", 75, 500, "Bold");
ctx.fillText("DOGRU KASAYI BULUN!", 160, 125);

ctx.textAlign = "left";
ctx.fillStyle = "#ffffff";
ctx.font = applyText(canvas, `${odÃ¼l} ${global.ayarlar.serverName.toUpperCase()} PARASI KAZANACAKSIN!`, 45, 690, "Bold");
ctx.fillText(`${global.ayarlar.serverName.toUpperCase()} KASALARININ SANA SUPRIZI VAR!`,180, 180 + 85 );

ctx.font = applyText(canvas, "SADECE BIR KEZ HAKKIN VAR!", 45, 690, "Bold");
ctx.fillText("SADECE BIR KEZ HAKKIN VAR!", 260, 310 + 40 );

    const attachment = new MessageAttachment(canvas.toBuffer(), 'acar_economy.png');

    let rakamSatirBir = new MessageActionRow().addComponents(
        new MessageButton().setCustomId('1').setEmoji("1061214943418011678").setStyle('SECONDARY'),
        new MessageButton().setCustomId('2').setEmoji("1061214943418011678").setStyle('SECONDARY'),
        new MessageButton().setCustomId('3').setEmoji("1061214943418011678").setStyle('SECONDARY'),
        new MessageButton().setCustomId('4').setEmoji("1061214943418011678").setStyle('SECONDARY'),
        new MessageButton().setCustomId('5').setEmoji("1061214943418011678").setStyle('SECONDARY')
    )
    let msg = await kanal.send({content: "**DoÄŸru KasayÄ± Bul!**\nAÅŸaÄŸÄ±da dÃ¼ÄŸmelerde verilen kasalardan doÄŸru kasayÄ± bulunuz. Bunun iÃ§in 30 Saniyeniz var!", files: [attachment] ,components: [rakamSatirBir]})

    const filter = i => i

    const collector = msg.createMessageComponentCollector({ componentType: 'BUTTON', time: 30000 });

    collector.on('collect', async i => {
        if (i.customId === String(cevap)) {
            if(basanlar.includes(i.user.id)) return  await i.reply({content: `${i.guild.emojiGÃ¶ster(emojiler.Iptal)} Cevap hakkÄ±nÄ±zÄ± doldurmuÅŸsunuz. ÃœzgÃ¼nÃ¼m!`, ephemeral: true});
            await i.reply({ content: `> **Tebrikler!** EtkinliÄŸi kazandÄ±ÄŸÄ±nÄ±z iÃ§in hesabÄ±nÄ±za +**${odÃ¼l}** ${global.ayarlar.serverName} ParasÄ± aktarÄ±ldÄ±. ${i.guild.emojiGÃ¶ster("a_rich")}`, ephemeral: true})
            let uye = i.guild.members.cache.get(i.user.id)
                    kanal.send({content: `**Tebrikler!** DoÄŸru kasayÄ± bul etkinliÄŸini ${uye} kazandÄ±! ${i.guild.emojiGÃ¶ster("a_rich")}` , files: []}).then(x => setTimeout(() => {
                        x.delete()
                    }, 10000))
msg.delete().catch(err =>{})
            basanlar = []
            if(uye) return await client.Economy.updateBalance(uye.id, Number(odÃ¼l), "add", 1)
            
        }
        if(i.customId != String(cevap)) {
            if(basanlar.includes(i.user.id)) return  await i.reply({content: `${i.guild.emojiGÃ¶ster(emojiler.Iptal)} Cevap hakkÄ±nÄ±zÄ± doldurmuÅŸsunuz. ÃœzgÃ¼nÃ¼m!`, ephemeral: true});
            basanlar.push(i.user.id)
            await  await i.reply({ content: `${i.guild.emojiGÃ¶ster(emojiler.Iptal)} **Hay Aksi!** YanlÄ±ÅŸ, artÄ±k birdahaki sorulara. Cevap hakkÄ±nÄ±z doldu!`, ephemeral: true})
        }
    });

    collector.on('end', collected => msg.delete().catch(err => {}));

    function applyText(canvas, text, defaultFontSize, width, font){
        const ctx = canvas.getContext("2d");
        do {
            ctx.font = `${(defaultFontSize -= 1)}px ${font}`;
        } while (ctx.measureText(text).width > width);
        return ctx.font;
    }
}

    function applyText(canvas, text, defaultFontSize, width, font){
        const ctx = canvas.getContext("2d");
        do {
            ctx.font = `${(defaultFontSize -= 1)}px ${font}`;
        } while (ctx.measureText(text).width > width);
        return ctx.font;
    }